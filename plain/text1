this is a test text!
daskljdkl dasjdl dakwdnc iwda daw diwoidowjqd-joqdnoniwq dksal dkalw lawjdlkajdlkwda.
awkjdakjd scefdjkaknwnkjdnwakdadisd jsnd jak a wind wjnedn owidnkj jdkawn dawnnda lksaldwi ioajdoan  aiwodjaojdlk laj kl   kjklawio oiwd;sf idkd lkl jlajwijo jlajwoijois kjw oijdaslkdjw oijadwaij ljaw ij aidjadjja oij woij ajw oia jljodakl ljfoawncz oidaj ojczod jo
asdkawo oiojdaj  lkja lkajwi iowaoic dooiajss aijo oa oiajwo j joawjoidjo oiwj kl oiaw jl aj woi ojio
sakj 12jk kjAK ,aKSLAkn lksAKNSLknskll lksdlakds- klwnl lkasd klsdnwl kwn klwl nlkawl lkanwdan lkwnadskl 13412 klasdl2 kl3lkdlk lksja
sadklak jlkasd 231 lkjslkdjd 312 kdaslkwni lkadwio.
At this stage, for each keyword Wi.
                              For many applications the purpose of the search is to find documents which contain a specific word, where the posi- tion or the number of occurrences are not relevant. For ex- ample, searching email is such an application, where the query takes on the form “find all email from Joe”. For this application, the previous search schemes leaked informa- tion, since the server would know the positions of the word in the document, or at least the frequency of a word in a doc- ument in case the word order is scrambled. Since we only need to know whether a given document contains a word, we can use the following trick. We add a count to each word, which counts how many times that word occurs pre- viously in that document. For example, the first occurrence of the
                              word “urgent” is stored as 􏱆􏰻􏰚 urgent􏰑, the second oc- currence as 􏱆􏰼􏰚 urgent􏰑, etc. This allows Alice to search for
, mi keys are generatedWe can see that updates in this scheme are easy. For ex- ample, if Alice wants to add a
new document into Bob’s data storage, she can simply encrypt it in the appropriate way and instruct Bob to append it to the already-stored ci- phertext. Moreover, since the keys can be generated hierar- chically from a master key, the key storage and management is also very convenient: Alice only needs to remember one password, the master key.
The underlying technique of embedding information in pseudorandom bit streams may also be of independent in- terest: we speculate that this simple trick might prove useful for other applications, too.
such that K(Wi) = {ki,0, ki,0, ..., ki,mi−1} and in each linked
list LiLet ∆ be a dictionary and D ⊆ 2
∆ be a document collection over ∆. The
trace induced by a q-query history H = (D, w),
, the pointers are encrypted as follows:
Let ∆ = (w1, . . . , wd) be a dictionary of d words in lexicographic order,
and 2∆ be the set of all possible documents with words in ∆. We assume d = poly(k) and that all
words w ∈ ∆ are of length polynomial in k.